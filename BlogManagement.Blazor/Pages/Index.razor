@page "/"
@page "/{tab}"
@inject NavigationManager Navigation

@inherits BlogManagementComponentBase
@layout AdminLayout

<section class="d-flex p-2">
        <h3 class="flex-grow-1">Write a post</h3>
        <a class="btn btn-success" href="/new/write">Write</a>
    </section>
<section>
    <ul class="nav nav-tabs flex-column flex-md-row mb-5" role="tablist">
        @foreach (var route in _tabRoutes) 
        {
            <li class="nav-item" role="presentation">
                <a class="@(route.IsActive ? "border-success nav-link active" : "nav-link active")"
                   data-bs-toggle="tab"
                   href="@route.Path"
                   aria-selected="@route.IsActive"
                   role="tab"
                   >@route.Name</a>
            </li>
        }
    </ul>
    
    @if (Tab == "draft")
    {
        <div class="container-md">
        
        </div>
    }
    @if (Tab == "published")
    {
        <div class="container-md">
         
        </div>
    }
    
    @if (Tab == "comments")
    {
        <div class="container-md">
         
        </div>
    }
    
    
</section>

@code {

    [Parameter]
    public string? Tab { get; set; }

    private readonly List<TabRoute> _tabRoutes = new List<TabRoute>()
        {
            new TabRoute("Draft", "/draft", true),
            new TabRoute("Published", "/published", false),
            new TabRoute("Comments", "/comments", false),
        };
    
    protected override void OnInitialized()
    {
        if (Tab != null) return;
        var defaultRoute = _tabRoutes.First<TabRoute>().Name;
        Navigation.NavigateTo(defaultRoute.ToLower());
    }
    
    protected override void OnParametersSet()
    {
        GetSelectedTab();
    }
    

    private void GetSelectedTab()
    {   
        _tabRoutes.ForEach(r => r.IsActive = false);
      
        _tabRoutes
            .Where(r => r.Name.ToLower() == Tab)
            .ToList()
            .ForEach(r => r.IsActive = true);
    }

    
    public class TabRoute 
    {
        public string Name {get; set;}
        public string Path {get; set;}
        public bool IsActive {get; set;}
        public TabRoute(string name, string path, bool isActive)
        {
            Name = name;
            Path = path;
            IsActive = isActive;
        }
    }

}
